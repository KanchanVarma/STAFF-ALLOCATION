/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * This is a continuation of ngx-popover
 * @Reference {github} https://github.com/pleerock/ngx-popover
 */
import { ComponentFactoryResolver, Directive, EventEmitter, HostListener, Input, Output, ViewContainerRef } from '@angular/core';
import { PopoverContentComponent } from './popover-content.component';
var PopoverPlacement = /** @class */ (function () {
    function PopoverPlacement() {
    }
    PopoverPlacement.Bottom = 'bottom';
    PopoverPlacement.BottomLeft = 'bottom-left';
    PopoverPlacement.BottomRight = 'bottom-right';
    PopoverPlacement.Left = 'left';
    PopoverPlacement.Right = 'right';
    PopoverPlacement.Top = 'top';
    PopoverPlacement.TopLeft = 'top-left';
    PopoverPlacement.TopRight = 'top-right';
    return PopoverPlacement;
}());
export { PopoverPlacement };
if (false) {
    /** @type {?} */
    PopoverPlacement.Bottom;
    /** @type {?} */
    PopoverPlacement.BottomLeft;
    /** @type {?} */
    PopoverPlacement.BottomRight;
    /** @type {?} */
    PopoverPlacement.Left;
    /** @type {?} */
    PopoverPlacement.Right;
    /** @type {?} */
    PopoverPlacement.Top;
    /** @type {?} */
    PopoverPlacement.TopLeft;
    /** @type {?} */
    PopoverPlacement.TopRight;
}
/**
 * \@group Basic Toolkit
 * \@component Popover Directive
 */
var PopoverDirective = /** @class */ (function () {
    // -------------------------------------------------------------------------
    // Constructor
    // -------------------------------------------------------------------------
    function PopoverDirective(viewContainerRef, resolver) {
        this.viewContainerRef = viewContainerRef;
        this.resolver = resolver;
        // -------------------------------------------------------------------------
        // Properties
        // -------------------------------------------------------------------------
        this.popoverContentComponent = PopoverContentComponent;
        this.popoverOnHover = true;
        this.popoverDismissTimeout = 0;
        this.onShown = new EventEmitter();
        this.onHidden = new EventEmitter();
    }
    // -------------------------------------------------------------------------
    // Event listeners
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Event listeners
    // -------------------------------------------------------------------------
    /**
     * @param {?} evt
     * @return {?}
     */
    PopoverDirective.prototype.showOrHideOnClick = 
    // -------------------------------------------------------------------------
    // Event listeners
    // -------------------------------------------------------------------------
    /**
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        if (this.popoverOnHover) {
            return;
        }
        if (this.popoverDisabled) {
            return;
        }
        evt.stopImmediatePropagation();
        this.toggle();
    };
    /**
     * @param {?} evt
     * @return {?}
     */
    PopoverDirective.prototype.showOrHideOnTouch = /**
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        evt.stopImmediatePropagation();
        if (!this.popoverOnHover) {
            return;
        }
        if (this.popoverDisabled) {
            return;
        }
        this.toggle();
    };
    /**
     * @return {?}
     */
    PopoverDirective.prototype.showOnHover = /**
     * @return {?}
     */
    function () {
        if (!this.popoverOnHover) {
            return;
        }
        if (this.popoverDisabled) {
            return;
        }
        this.show();
    };
    /**
     * @return {?}
     */
    PopoverDirective.prototype.hideOnHover = /**
     * @return {?}
     */
    function () {
        if (this.popoverCloseOnMouseOutside) {
            return; // don't do anything since we do not control this
        }
        if (!this.popoverOnHover) {
            return;
        }
        if (this.popoverDisabled) {
            return;
        }
        this.hide();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    PopoverDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes['popoverDisabled']) {
            if (changes['popoverDisabled'].currentValue) {
                this.hide();
            }
        }
    };
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    PopoverDirective.prototype.toggle = 
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        if (!this.visible) {
            this.show();
        }
        else {
            this.hide();
        }
    };
    /**
     * @return {?}
     */
    PopoverDirective.prototype.show = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.visible) {
            return;
        }
        this.visible = true;
        if (typeof this.content === 'string') {
            /** @type {?} */
            var factory = this.resolver.resolveComponentFactory(this.popoverContentComponent);
            if (!this.visible) {
                return;
            }
            this.popover = this.viewContainerRef.createComponent(factory);
            /** @type {?} */
            var popover = (/** @type {?} */ (this.popover.instance));
            popover.popover = this;
            popover.content = (/** @type {?} */ (this.content));
            if (this.popoverPlacement !== undefined) {
                popover.placement = this.popoverPlacement;
            }
            if (this.popoverAnimation !== undefined) {
                popover.animation = this.popoverAnimation;
            }
            if (this.popoverTitle !== undefined) {
                popover.title = this.popoverTitle;
            }
            if (this.popoverCloseOnClickOutside !== undefined) {
                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;
            }
            if (this.popoverCloseOnMouseOutside !== undefined) {
                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;
            }
            if (this.popoverSize) {
                popover.size = this.popoverSize;
            }
            popover.onCloseFromOutside.subscribe((/**
             * @return {?}
             */
            function () { return _this.hide(); }));
            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time
            if (this.popoverDismissTimeout > 0) {
                setTimeout((/**
                 * @return {?}
                 */
                function () { return _this.hide(); }), this.popoverDismissTimeout);
            }
        }
        else {
            /** @type {?} */
            var popover = (/** @type {?} */ (this.content));
            popover.popover = this;
            if (this.popoverPlacement !== undefined) {
                popover.placement = this.popoverPlacement;
            }
            if (this.popoverAnimation !== undefined) {
                popover.animation = this.popoverAnimation;
            }
            if (this.popoverTitle !== undefined) {
                popover.title = this.popoverTitle;
            }
            if (this.popoverCloseOnClickOutside !== undefined) {
                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;
            }
            if (this.popoverCloseOnMouseOutside !== undefined) {
                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;
            }
            if (this.popoverSize) {
                popover.size = this.popoverSize;
            }
            popover.onCloseFromOutside.subscribe((/**
             * @return {?}
             */
            function () { return _this.hide(); }));
            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time
            if (this.popoverDismissTimeout > 0) {
                setTimeout((/**
                 * @return {?}
                 */
                function () { return _this.hide(); }), this.popoverDismissTimeout);
            }
            popover.show();
        }
        this.onShown.emit(this);
    };
    /**
     * @return {?}
     */
    PopoverDirective.prototype.hide = /**
     * @return {?}
     */
    function () {
        if (!this.visible) {
            return;
        }
        this.visible = false;
        if (this.popover) {
            this.popover.destroy();
        }
        if (this.content instanceof PopoverContentComponent) {
            ((/** @type {?} */ (this.content))).hideFromPopover();
        }
        this.onHidden.emit(this);
    };
    /**
     * @return {?}
     */
    PopoverDirective.prototype.getElement = /**
     * @return {?}
     */
    function () {
        return this.viewContainerRef.element.nativeElement;
    };
    PopoverDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[popover]',
                    exportAs: 'popover'
                },] }
    ];
    /** @nocollapse */
    PopoverDirective.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: ComponentFactoryResolver }
    ]; };
    PopoverDirective.propDecorators = {
        content: [{ type: Input, args: ['popover',] }],
        popoverSize: [{ type: Input }],
        popoverDisabled: [{ type: Input }],
        popoverAnimation: [{ type: Input }],
        popoverPlacement: [{ type: Input }],
        popoverTitle: [{ type: Input }],
        popoverOnHover: [{ type: Input }],
        popoverCloseOnClickOutside: [{ type: Input }],
        popoverCloseOnMouseOutside: [{ type: Input }],
        popoverDismissTimeout: [{ type: Input }],
        onShown: [{ type: Output }],
        onHidden: [{ type: Output }],
        showOrHideOnClick: [{ type: HostListener, args: ['click', ['$event'],] }],
        showOrHideOnTouch: [{ type: HostListener, args: ['touchend', ['$event'],] }],
        showOnHover: [{ type: HostListener, args: ['focusin',] }, { type: HostListener, args: ['mouseenter',] }],
        hideOnHover: [{ type: HostListener, args: ['focusout',] }, { type: HostListener, args: ['mouseleave',] }]
    };
    return PopoverDirective;
}());
export { PopoverDirective };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    PopoverDirective.prototype.popoverContentComponent;
    /**
     * @type {?}
     * @protected
     */
    PopoverDirective.prototype.popover;
    /**
     * @type {?}
     * @protected
     */
    PopoverDirective.prototype.visible;
    /** @type {?} */
    PopoverDirective.prototype.content;
    /** @type {?} */
    PopoverDirective.prototype.popoverSize;
    /** @type {?} */
    PopoverDirective.prototype.popoverDisabled;
    /** @type {?} */
    PopoverDirective.prototype.popoverAnimation;
    /** @type {?} */
    PopoverDirective.prototype.popoverPlacement;
    /** @type {?} */
    PopoverDirective.prototype.popoverTitle;
    /** @type {?} */
    PopoverDirective.prototype.popoverOnHover;
    /** @type {?} */
    PopoverDirective.prototype.popoverCloseOnClickOutside;
    /** @type {?} */
    PopoverDirective.prototype.popoverCloseOnMouseOutside;
    /** @type {?} */
    PopoverDirective.prototype.popoverDismissTimeout;
    /** @type {?} */
    PopoverDirective.prototype.onShown;
    /** @type {?} */
    PopoverDirective.prototype.onHidden;
    /**
     * @type {?}
     * @protected
     */
    PopoverDirective.prototype.viewContainerRef;
    /**
     * @type {?}
     * @protected
     */
    PopoverDirective.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,